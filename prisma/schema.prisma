// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Corretor {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String

  cotacao  Cotacao[]
  hospital Hospital[]

  @@map("corretor")
}

model HospitaisPlano {
  id Int @id @default(autoincrement())

  plano    Plano    @relation(fields: [planoId], references: [id])
  hospital Hospital @relation(fields: [hospitalId], references: [id])

  planoId    String @map("plano_id")
  hospitalId String

  @@map("rede_referenciada")
}

model Plano {
  id      String    @id @default(uuid())
  name    String
  cotacao Cotacao[]
  slug    String

  hospitaisPlano HospitaisPlano[]
  hospital       Hospital?        @relation(fields: [hospitalId], references: [id])
  hospitalId     String?

  @@map("planos")
}

model Hospital {
  id             String           @id @default(uuid())
  razao_social   String
  telefone       String
  endereco       String
  cro            String?
  bairro         String
  cidade         String
  estado         String
  cep            String?
  corretor       Corretor?        @relation(fields: [corretorId], references: [id])
  corretorId     String?
  planos         Plano[]
  hospitaisPlano HospitaisPlano[]

  @@map("hospital")
}

model Dependente {
  id        String  @id @default(uuid())
  nome      String
  idade     Int
  preco     Int?
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId String

  @@map("dependente")
}

model Cliente {
  id          String       @id @default(uuid())
  nome        String
  documento   String
  cotacoes    Cotacao[]
  dependentes Dependente[]

  @@map("cliente")
}

model Modalidade {
  id      String    @id @default(uuid())
  name    String
  cotacao Cotacao[]

  @@map("modalidade")
}

model Cotacao {
  id           String     @id @default(uuid())
  corretor     Corretor?  @relation(fields: [corretorId], references: [id])
  corretorId   String?
  plano        Plano?     @relation(fields: [planoId], references: [id])
  planoId      String?
  cliente      Cliente?   @relation(fields: [clienteId], references: [id])
  clienteId    String?
  createdAt    DateTime   @default(now()) @map("created_at")
  totalPrice   Int        @map("total_price")
  modalidade   Modalidade @relation(fields: [modalidadeId], references: [id])
  modalidadeId String

  @@map("cotacao")
}
